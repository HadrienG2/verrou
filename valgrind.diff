Index: Makefile.am
===================================================================
--- Makefile.am	(révision 16450)
+++ Makefile.am	(copie de travail)
@@ -10,7 +10,8 @@
 		lackey \
 		none \
 		helgrind \
-		drd
+		drd \
+		verrou
 
 EXP_TOOLS = 	exp-sgcheck \
 		exp-bbv \
Index: configure.ac
===================================================================
--- configure.ac	(révision 16450)
+++ configure.ac	(copie de travail)
@@ -8,7 +8,7 @@
 ##------------------------------------------------------------##
 
 # Process this file with autoconf to produce a configure script.
-AC_INIT([Valgrind],[3.14.0.SVN],[valgrind-users@lists.sourceforge.net])
+AC_INIT([Valgrind],[3.14.0.SVN.+verrou-dev],[valgrind-users@lists.sourceforge.net])
 AC_CONFIG_SRCDIR(coregrind/m_main.c)
 AC_CONFIG_HEADERS([config.h])
 AM_INIT_AUTOMAKE([foreign subdir-objects])
@@ -172,6 +172,8 @@
 	;;
 esac
 
+AM_PATH_PYTHON()
+
 #----------------------------------------------------------------------------
 # Arch/OS/platform tests.
 #----------------------------------------------------------------------------
@@ -4353,6 +4355,65 @@
                [test x$ac_have_shared_pointer_annotation = xyes])
 
 
+#Verrou
+AC_CACHE_CHECK([verrou fma], vg_cv_verrou_fma,
+  [AC_ARG_ENABLE(verrou-fma,
+    [  --enable-verrou-fma          enables verrou to use fma],
+    [vg_cv_verrou_fma=$enableval],
+    [vg_cv_verrou_fma=no])])
+
+if test "$vg_cv_verrou_fma" = yes; then
+  # Check for fmaintrin.h
+  AC_MSG_CHECKING([for fmaintrin.h ])
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+      #include  <immintrin.h>
+      #include  <fmaintrin.h>
+    ]], [[
+      return EXIT_SUCCESS;
+    ]])],
+    [
+      AC_MSG_RESULT([yes])
+      AM_CONDITIONAL([HAVE_FMA_INTRIN], test x$vg_cv_verrou_fma = xyes,[])
+    ],[
+      AC_MSG_RESULT([no])
+      AC_MSG_ERROR([A compiler with fmaintrin.h is required for --enable-verrou-fma ])
+  ])
+else
+  AM_CONDITIONAL([HAVE_FMA_INTRIN], test x$vg_cv_verrou_fma = xyes,[])
+fi
+
+
+AC_CACHE_CHECK([verrou vecto-backend], vg_cv_verrou_vecto_backend,
+  [AC_ARG_ENABLE(verrou-vecto-backend,
+    [  --enable-verrou-vecto-backend          enables verrou to use vectorized backend interface],
+    [vg_cv_verrou_vecto_backend=$enableval],
+    [vg_cv_verrou_vecto_backend=no])])
+
+if test "$vg_cv_verrou_vecto_backend" = yes; then
+  # Check for avx
+  AC_MSG_CHECKING([for avx ])
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+  #include  <immintrin.h>
+  #include <avxintrin.h>
+    ]], [[
+     return EXIT_SUCCESS;
+    ]])],
+    [
+      AC_MSG_RESULT([yes])
+      AM_CONDITIONAL([HAVE_AVX_INTRIN], test x$vg_cv_verrou_vecto_backend = xyes,[])
+    ],[
+      AC_MSG_RESULT([no])
+      AC_MSG_ERROR([A compiler with AVX intrinsics is required for --enable-verrou-vecto-backend ])
+  ])
+else
+  AM_CONDITIONAL([HAVE_AVX_INTRIN], test x$vg_cv_verrou_vecto_backend = xyes,[])
+fi
+#     //a=_mm512_add_pd (b, c);
+
+
+
+AC_CONFIG_FILES([verrou/env.sh])
+
 #----------------------------------------------------------------------------
 # Ok.  We're done checking.
 #----------------------------------------------------------------------------
@@ -4445,6 +4506,8 @@
    exp-bbv/tests/arm-linux/Makefile
    exp-dhat/Makefile
    exp-dhat/tests/Makefile
+   verrou/Makefile
+   verrou/tests/Makefile
    shared/Makefile
    solaris/Makefile
 ])
Index: docs/lib/vg_basic.css
===================================================================
--- docs/lib/vg_basic.css	(révision 16450)
+++ docs/lib/vg_basic.css	(copie de travail)
@@ -65,3 +65,39 @@
  border:      solid 1px #ffde84; 
 }
 
+div.note,
+div.warning {
+    margin-left: 0 !important;
+    margin-right: 0 !important;
+    border-radius: 4px;
+    padding: 1em;
+}
+
+div.note h3,
+div.warning h3 {
+    font-size: 100%;
+    font-weight: bold;
+    margin-top: 0;
+}
+
+div.note p,
+div.warning p {
+    margin: 0;
+}
+
+div.note {
+    background-color: #d9edf7;
+    border: 1px solid #bce8f1;
+}
+div.note, div.note h3 {
+    color: #31708f;
+}
+
+div.warning {
+    background-color: #fcf8e3;
+    border: 1px solid #faebcc;
+}
+
+div.warning, div.warning h3 {
+    color: #8a6d3b;
+}
Index: docs/xml/manpages-index.xml
===================================================================
--- docs/xml/manpages-index.xml	(révision 16450)
+++ docs/xml/manpages-index.xml	(copie de travail)
@@ -43,5 +43,9 @@
 <xi:include href="../../coregrind/docs/vgdb-manpage.xml"
     parse="xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
 
+<!-- verrou_dd -->
+<xi:include href="../../verrou/docs/verrou_dd-manpage.xml"
+    parse="xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
+
 </set>
 
Index: docs/xml/manual.xml
===================================================================
--- docs/xml/manual.xml	(révision 16450)
+++ docs/xml/manual.xml	(copie de travail)
@@ -44,6 +44,8 @@
       xmlns:xi="http://www.w3.org/2001/XInclude" />      
   <xi:include href="../../lackey/docs/lk-manual.xml" parse="xml"  
       xmlns:xi="http://www.w3.org/2001/XInclude" />
+  <xi:include href="../../verrou/docs/vr-manual.xml" parse="xml"
+      xmlns:xi="http://www.w3.org/2001/XInclude" />
   <xi:include href="../../none/docs/nl-manual.xml" parse="xml"  
       xmlns:xi="http://www.w3.org/2001/XInclude" />
 
Index: docs/xml/valgrind-manpage.xml
===================================================================
--- docs/xml/valgrind-manpage.xml	(révision 16450)
+++ docs/xml/valgrind-manpage.xml	(copie de travail)
@@ -230,6 +230,8 @@
 
 </refsect1>
 
+<xi:include href="../../verrou/docs/valgrind-manpage.xml"
+            xmlns:xi="http://www.w3.org/2001/XInclude" />
 
 <refsect1 id="see_also">
 <title>See Also</title>
Index: docs/xml/vg-entities.xml
===================================================================
--- docs/xml/vg-entities.xml	(révision 16450)
+++ docs/xml/vg-entities.xml	(copie de travail)
@@ -6,7 +6,7 @@
 
 <!-- valgrind release + version stuff -->
 <!ENTITY rel-type    "Release">
-<!ENTITY rel-version "3.13.0">
+<!ENTITY rel-version "3.13.0+verrou-dev">
 <!ENTITY rel-date    "15 June 2017">
 
 <!-- where the docs are installed -->
